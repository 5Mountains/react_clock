{"version":3,"sources":["components/Clock.jsx","App.jsx","index.js"],"names":["Clock","state","date","Date","timer","setInterval","setState","console","log","toLocaleTimeString","this","prevProps","oldName","name","newName","props","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","randomName","Math","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAgDeA,G,kNA5CbC,MAAQ,CACNC,KAAM,IAAIC,M,EAGZC,MAAQC,aAAY,WAClB,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,OADF,IAEhBD,EAAS,EAAKD,MAAdC,KAERK,QAAQC,IAAIN,EAAKO,wBAChB,K,kEAGD,OAAOC,KAAKN,Q,yCAGKO,GACjB,IAAMC,EAAUD,EAAUE,KACpBC,EAAUJ,KAAKK,MAAMF,KAEvBD,IAAYE,GAEdP,QAAQC,IAAR,qCAA0CI,EAA1C,eAAwDE,M,6CAK1DE,cAAcN,KAAKN,S,+BAGX,IACAF,EAASQ,KAAKT,MAAdC,KAER,OACE,8BACGA,EAAKO,0B,GAnCMQ,IAAMC,YC0DXC,E,4MAvDblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKhB,SAAS,CAAEc,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKjB,SAAS,CAAEc,gBAAgB,K,EAGlCI,WAAa,WACX,EAAKlB,SAAS,CAAEe,UAAWI,KAAKC,Y,uDAGxB,IAAD,EAC+BhB,KAAKT,MAAnCmB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKM,UAAU,OACb,2CAEA,4CACiBP,GAAmB,kBAAC,EAAD,CAAOP,KAAMQ,KAGjD,yBAAKM,UAAU,gBACb,4BACEC,KAAK,SACLC,QAASnB,KAAKY,WAFhB,cAOA,4BACEM,KAAK,SACLC,QAASnB,KAAKa,WAFhB,cAOA,4BACEK,KAAK,SACLC,QAASnB,KAAKc,YAFhB,yB,GA5CQP,IAAMC,WCDxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.16ded5dd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  timer = setInterval(() => {\n    this.setState({ date: new Date() });\n    const { date } = this.state;\n    // eslint-disable-next-line\n    console.log(date.toLocaleTimeString());\n  }, 1000);\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentDidUpdate(prevProps) {\n    const oldName = prevProps.name;\n    const newName = this.props.name;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <span>\n        {date.toLocaleTimeString()}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\n\nimport './App.scss';\n\nimport Clock from './components/Clock';\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  randomName = () => {\n    this.setState({ clockName: Math.random() });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <p>\n          Current time: {isClockVisible && (<Clock name={clockName} />)}\n        </p>\n\n        <div className=\"App__buttons\">\n          <button\n            type=\"button\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.randomName}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}